networks:
  spring-boot:
    driver: bridge
    name: containerized-spring-boot

services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=postgres'
    networks:
      - spring-boot
    ports:
      - '5432'
    restart: on-failure

  exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: exporter
    networks:
      - spring-boot
    ports:
      - '9187'
    environment:
      - DATA_SOURCE_URI=postgres:5432/postgres?sslmode=disable
      - DATA_SOURCE_USER=postgres
      - DATA_SOURCE_PASS=secret

  kafka:
    image: bitnami/kafka
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - spring-boot
    ports:
      - '9093'
      - '9094'
    restart: on-failure

  kowl:
    image: quay.io/cloudhut/kowl:master
    container_name: kowl
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - spring-boot
    ports:
      - '8083:8080'
    depends_on:
      - kafka
    restart: on-failure
